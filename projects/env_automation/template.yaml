AWSTemplateFormatVersion: '2010-09-09'
Description: |
  CloudFormation template to create a VPC with 1 public and 1 private subnet in a single Availability Zone, with DNS options enabled and no NAT Gateway.

Parameters:
  VpcCidr:
    Type: String
    Default: 10.200.123.0/24
    Description: IPv4 CIDR block for the VPC

  VpcName:
    Type: String
    Default: network-bootcamp-vpc
    Description: Name tag for the VPC

  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ca-central-1a
    Description: Availability Zone for the subnets

  PublicSubnetCidr:
    Type: String
    Default: 10.200.123.0/28
    Description: CIDR block for the public subnet

  PublicSubnetName:
    Type: String
    Default: network-bootcamp-subnet-public1-ca-central-1a
    Description: Name tag for the public subnet

  PublicRouteTableName:
    Type: String
    Default: network-bootcamp-rtb-public
    Description: Name tag for the public route table

  PrivateSubnetCidr:
    Type: String
    Default: 10.200.123.128/28
    Description: CIDR block for the private subnet

  PrivateSubnetName:
    Type: String
    Default: network-bootcamp-subnet-private1-ca-central-1a
    Description: Name tag for the private subnet

  PrivateRouteTableName:
    Type: String
    Default: network-bootcamp-rtb-private-ca-central-1a
    Description: Name tag for the private route table

  InternetGatewayName:
    Type: String
    Default: network-bootcamp-igw
    Description: Name tag for the Internet Gateway

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Ref VpcName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGatewayName

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref PublicSubnetName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnetName

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PublicRouteTableName

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PrivateRouteTableName

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VpcId:
    Description: ID of the created VPC
    Value: !Ref VPC

  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet

  PrivateSubnetId:
    Description: ID of the private subnet
    Value: !Ref PrivateSubnet